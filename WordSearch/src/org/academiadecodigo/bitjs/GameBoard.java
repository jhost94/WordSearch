package org.academiadecodigo.bitjs;

import java.io.PrintWriter;

public class GameBoard {
    volatile public static String[][] board = {
            {"                   ", Colors.YELLOW.concat(" 1 "), Colors.YELLOW.concat(" 2 "), Colors.YELLOW.concat(" 3 "), Colors.YELLOW.concat(" 4 "), Colors.YELLOW.concat(" 5 "), Colors.YELLOW.concat(" 6 "), Colors.YELLOW.concat(" 7 "), Colors.YELLOW.concat(" 8 "), Colors.YELLOW.concat(" 9 "), Colors.YELLOW.concat("10 "), Colors.YELLOW.concat("11 "), Colors.YELLOW.concat("12 "), Colors.YELLOW.concat("13 "), Colors.YELLOW.concat("14 "), " \n"},
            {"               " + Colors.YELLOW.concat(" 1  "), Colors.WHITE.concat(" L "), Colors.WHITE.concat(" R "), Colors.WHITE.concat(" I "), Colors.WHITE.concat(" N "), Colors.WHITE.concat(" H "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" R "), Colors.WHITE.concat(" I "), Colors.WHITE.concat(" T "), Colors.WHITE.concat(" A "), Colors.WHITE.concat(" G "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" G "), Colors.WHITE.concat(" H "), " \n"},
            {"               " + Colors.YELLOW.concat(" 2  "), Colors.WHITE.concat(" C "), Colors.WHITE.concat(" L "), Colors.WHITE.concat(" I "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" N "), Colors.WHITE.concat(" T "), Colors.WHITE.concat(" S "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" R "), Colors.WHITE.concat(" V "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" R "), Colors.WHITE.concat(" I "), Colors.WHITE.concat(" D "), " \n"},
            {"               " + Colors.YELLOW.concat(" 3  "), Colors.WHITE.concat(" L "), Colors.WHITE.concat(" I "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" S "), Colors.WHITE.concat(" S "), Colors.WHITE.concat(" S "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" N "), Colors.WHITE.concat(" G "), Colors.WHITE.concat(" H "), Colors.WHITE.concat(" I "), Colors.WHITE.concat(" T "), Colors.WHITE.concat(" C "), Colors.WHITE.concat(" E "), " \n"},
            {"               " + Colors.YELLOW.concat(" 4  "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" O "), Colors.WHITE.concat(" B "), Colors.WHITE.concat(" U "), Colors.WHITE.concat(" R "), Colors.WHITE.concat(" M "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" R "), Colors.WHITE.concat(" S "), Colors.WHITE.concat(" L "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" B "), Colors.WHITE.concat(" L "), " \n"},
            {"               " + Colors.YELLOW.concat(" 5  "), Colors.WHITE.concat(" N "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" D "), Colors.WHITE.concat(" D "), Colors.WHITE.concat(" I "), Colors.WHITE.concat(" D "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" P "), Colors.WHITE.concat(" T "), Colors.WHITE.concat(" A "), Colors.WHITE.concat(" R "), Colors.WHITE.concat(" I "), Colors.WHITE.concat(" U "), Colors.WHITE.concat(" E "), " \n"},
            {"               " + Colors.YELLOW.concat(" 6  "), Colors.WHITE.concat(" N "), Colors.WHITE.concat(" X "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" N "), Colors.WHITE.concat(" A "), Colors.WHITE.concat(" N "), Colors.WHITE.concat(" L "), Colors.WHITE.concat(" P "), Colors.WHITE.concat(" T "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" R "), Colors.WHITE.concat(" T "), " \n"},
            {"               " + Colors.YELLOW.concat(" 7  "), Colors.WHITE.concat(" I "), Colors.WHITE.concat(" C "), Colors.WHITE.concat(" T "), Colors.WHITE.concat(" U "), Colors.WHITE.concat(" M "), Colors.WHITE.concat(" A "), Colors.WHITE.concat(" T "), Colors.WHITE.concat(" C "), Colors.WHITE.concat(" S "), Colors.WHITE.concat(" X "), Colors.WHITE.concat(" N "), Colors.WHITE.concat(" H "), Colors.WHITE.concat(" T "), Colors.WHITE.concat(" E "), " \n"},
            {"               " + Colors.YELLOW.concat(" 8  "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" O "), Colors.WHITE.concat(" O "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" D "), Colors.WHITE.concat(" B "), Colors.WHITE.concat(" A "), Colors.WHITE.concat(" U "), Colors.WHITE.concat(" T "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" X "), Colors.WHITE.concat(" S "), " \n"},
            {"               " + Colors.YELLOW.concat(" 9  "), Colors.WHITE.concat(" R "), Colors.WHITE.concat(" P "), Colors.WHITE.concat(" N "), Colors.WHITE.concat(" C "), Colors.WHITE.concat(" T "), Colors.WHITE.concat(" M "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" N "), Colors.WHITE.concat(" D "), Colors.WHITE.concat(" O "), Colors.WHITE.concat(" T "), Colors.WHITE.concat(" N "), Colors.WHITE.concat(" S "), Colors.WHITE.concat(" I "), " \n"},
            {"               " + Colors.YELLOW.concat(" 10 "), Colors.WHITE.concat(" H "), Colors.WHITE.concat(" T "), Colors.WHITE.concat(" N "), Colors.WHITE.concat(" H "), Colors.WHITE.concat(" C "), Colors.WHITE.concat(" B "), Colors.WHITE.concat(" S "), Colors.WHITE.concat(" U "), Colors.WHITE.concat(" T "), Colors.WHITE.concat(" R "), Colors.WHITE.concat(" B "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" D "), Colors.WHITE.concat(" T "), " \n"},
            {"               " + Colors.YELLOW.concat(" 11 "), Colors.WHITE.concat(" R "), Colors.WHITE.concat(" I "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" N "), Colors.WHITE.concat(" P "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" N "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" T "), Colors.WHITE.concat(" I "), Colors.WHITE.concat(" T "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" L "), " \n"},
            {"               " + Colors.YELLOW.concat(" 12 "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" O "), Colors.WHITE.concat(" P "), Colors.WHITE.concat(" I "), Colors.WHITE.concat(" L "), Colors.WHITE.concat(" S "), Colors.WHITE.concat(" U "), Colors.WHITE.concat(" D "), Colors.WHITE.concat(" R "), Colors.WHITE.concat(" S "), Colors.WHITE.concat(" M "), Colors.WHITE.concat(" C "), Colors.WHITE.concat(" R "), Colors.WHITE.concat(" N "), " \n"},
            {"               " + Colors.YELLOW.concat(" 13 "), Colors.WHITE.concat(" I "), Colors.WHITE.concat(" N "), Colors.WHITE.concat(" N "), Colors.WHITE.concat(" B "), Colors.WHITE.concat(" O "), Colors.WHITE.concat(" T "), Colors.WHITE.concat(" N "), Colors.WHITE.concat(" H "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" S "), Colors.WHITE.concat(" P "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" I "), Colors.WHITE.concat(" N "), " \n"},
            {"               " + Colors.YELLOW.concat(" 14 "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" C "), Colors.WHITE.concat(" N "), Colors.WHITE.concat(" A "), Colors.WHITE.concat(" T "), Colors.WHITE.concat(" I "), Colors.WHITE.concat(" R "), Colors.WHITE.concat(" E "), Colors.WHITE.concat(" H "), Colors.WHITE.concat(" N "), Colors.WHITE.concat(" I "), Colors.WHITE.concat(" I "), Colors.WHITE.concat(" U "), " \n"},
    };


    public static void printGameCard(PrintWriter socketWriter){
        for (int row = 0; row < board.length; row++) {        // scheme.length returns the number of rows (14)
            for (int col = 0; col < board[0].length; col++) {  // scheme[0].length returns the number of cols (11)
                socketWriter.print(board[row][col]);
                socketWriter.flush();
            }
        }
    }
}
